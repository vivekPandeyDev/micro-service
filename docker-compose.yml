services:
  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: ./Dockerfile.dev
    ports:
      - "${DISCOVERY_SERVICE_PORT}:${DISCOVERY_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${DISCOVERY_SERVICE_PORT}
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - app-net    
    command: mvn spring-boot:run

  user-service:
    build:
      context: ./user-service
      dockerfile: ./Dockerfile.dev
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    volumes:
      - ./user-service:/app      # Mount local code to container
      - ~/.m2:/root/.m2          # Cache Maven dependencies    
    environment:
      SERVER_PORT: ${USER_SERVICE_PORT}
      SPRING_EUREKA_CLIENT_URL: ${SPRING_EUREKA_CLIENT_URL}
      SPRING_CLOUD_CONFIG_URI: ${SPRING_CLOUD_CONFIG_URI}
      SPRING_PROFILES_ACTIVE: dev
      ZIPKIN_URI: ${ZIPKIN_URI}
      DB_URI: ${DB_URI}
      KAFKA_SERVER: ${KAFKA_SERVER}
      MINIO_URI: ${MINIO_URI}
    depends_on:
      - config-service
    networks:
      - app-net    
    command: mvn spring-boot:run

  config-service:
    build:
      context: ./config-service
      dockerfile: ./Dockerfile.dev
    ports:
      - "${CONFIG_SERVICE_PORT}:${CONFIG_SERVICE_PORT}"
    volumes:
      - ./config-service:/app      # Mount local code to container
      - ~/.m2:/root/.m2          # Cache Maven dependencies    
    environment:
      SERVER_PORT: ${CONFIG_SERVICE_PORT}
      SPRING_EUREKA_CLIENT_URL: ${SPRING_EUREKA_CLIENT_URL}
    depends_on:
      - discovery-service
    networks:
      - app-net        
    command: mvn spring-boot:run

networks:
  app-net:
    external: true    